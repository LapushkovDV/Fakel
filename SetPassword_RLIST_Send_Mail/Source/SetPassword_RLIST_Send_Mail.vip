/*************************************************************************************************\
* Наименование: Ведение телефонного справочника                                                   *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
*/

#include RLIST_SENDMAIL.VIH
Interface SetPassword_RLIST_Send_Mail 'Установка пароля для рассылки расчетных листков по EMAIL';


create view
var
   _prefixPSWD
 , _log       : string;

   _type
 , _lenPSWD : word;
 _ccatEMAIL : comp;
as select
 persons.nrec
from
   Persons
 , Communications
 , catalogs
;
#include RLIST_SENDMAIL.VAR
Screen scrSetPassword;

  Fields
   _type  : [list 'Все', 'Только если пароль был пустой'], protect;
   _prefixPSWD : NoProtect;
   _lenPSWD : noprotect;
  buttons
    cmValue1,,,;
    cmValue2,,,;
<<'Установка пароля для рассылки расчетных листков по EMAIL'

Пароли устанавливаются для
  PERSONS.ISEMPLOYEE = 'С'
  и COMMUNICATION, ссылающиеся на CATALOGS.SYSCODE = 70

Режим обновления паролей: .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Генерация пароля:
  префикс .@@@@@@@@@@@@@@@@@@@@@@@@@@    <. Префикс + ТН .>

  рандомный. длина пароля.@@@@@@@        <.  Рандомный   .>

>>
end;
procedure mylog(_str : string) ;{
  if _log = '' {
    _log := GetStringParameter('Files','OutputFilesDirectory',0)+ '\SetPassword_'+DateToStr(cur_date,'YYYYMMDD')+'_'+timetostr(cur_time,'HHMMSS-SSS') +'.log';
  }
  logstrtofile(_log,_str);
}
function createRandomPSWD(_lenPSWD : word) : string; {
  result := substr(olegenerateguid,1,_lenPSWD);
}

procedure setpswd(_typeGenerate : word); {
  _loop persons where persons.isemployee = 'С' {
    _loop communications where ((persons.nrec == communications.PERSON
                               and _ccatEMAIL == communications.COMTYPE
                               and 1 == communications.FILIALNO (noindex)
                               and 3 == communications.OBJTYPE (noindex) )) {
       var _logText : string;
       var _TN : string = if(persons.STRTABN = '',string(persons.TABNMB), persons.STRTABN);

       _logText := _TN + ', ' + persons.fio;
      if _type = 0 or Communications.Password = '' {
       var _password : string = '';
       _logText := _logText +' ' + if(Communications.Password = '','установлен','изменен') + ' пароль';
        case _typeGenerate of
         0 : {  // префикс + ТН
            _password := _prefixPSWD + _TN;
         }
         1: {
            _password := createRandomPSWD(_lenPSWD);
         }
        end;
        _logText := _logText + ' "' +_password+'"';
         update current Communications set Communications.Password := RLSM.GetStrForBase(_password);
      } else {
        _logText := _logText + ' пропускаем';
      }

     mylog(_logText);
    }
  }
  ProcessText(_log, vfEscable or vfNewTitle or vfMacroSize, 'Протокол установки паролей');
}
handleevent
cminit: {
  _lenPSWD := 6;
  if getfirst catalogs where ((70 ==catalogs.syscode)) <> tsOK {
    message('Не найден системный элемент e-mail catalogs.syscode = 70',error);
    stop;abort;exit;
  }
  _ccatEMAIL := catalogs.nrec;
}
cmValue1: {
  _log := '';
 setpswd(0);
}
cmValue2: {
  if _lenPSWD < 6 or _lenPSWD > 30 {
    message('Минимальная длина пароля -6, максимальная - 30',error);
    stop; abort; exit;
  }
  _log := '';
  setpswd(1);
}
end;
end.
